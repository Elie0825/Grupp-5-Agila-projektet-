
import { Request, Response } from "express"; // Importerar typer f√∂r Express-request/response
import { RowDataPacket } from "mysql2"; // Typning av svar fr√•n MySQL
import { pool } from "./db"; // Importerar v√•r databasanslutning (fr√•n flyttad db.ts-fil)
import { Movie } from "../src/types/movie"; // Importerar v√•r Movie-typ s√• vi kan type-casta resultatet fr√•n databasen
/**
 * GET-endpoint som anropas fr√•n frontend (serverless via Vercel)
 * H√§mtar alla filmer fr√•n databasen och returnerar som JSON
 */
export default async function handler(req: Request, res: Response) {
  try {
    // üîπ H√§mta alla filmer fr√•n databasen
    const [rows] = await pool.execute(
      "SELECT * FROM movies"
    ) as RowDataPacket[][];

    // üîπ Skicka tillbaka filmerna till frontend i r√§tt format
    res.status(200).json({
      data: rows as Movie[],         // Array med filmer
      total: (rows as Movie[]).length, // Totalt antal filmer
    });
  } catch (error) {
    // N√•got gick fel ‚Äì logga felet och skicka tillbaka ett felmeddelande
    console.error("Fel vid h√§mtning av filmer:", error);
    res.status(500).json({
      error: {
        code: "500",
        message: "A server error has occurred",
      },
    });
  }
}