// api.ts - med robust fallback
import axios from "axios";
import { Movie } from "../types/movie";

const isLocalhost = window.location.hostname === 'localhost';

export const fetchMarvelMovies = async () => {
  try {
    // F칬rst f칬rs칬ker vi h칛mta data fr친n r칛tt k칛lla baserat p친 milj칬
    if (isLocalhost) {
      // Lokalt: h칛mta direkt fr친n MCU API
      const response = await axios.get("https://mcuapi.herokuapp.com/api/v1/movies");
      console.log("游꿟 H칛mtade filmer direkt fr친n MCU API (lokal utveckling)");
      return response.data.data;
    } else {
      // P친 Vercel: f칬rs칬k h칛mta fr친n v친r databas via API
      try {
        console.log("游꿟 F칬rs칬ker h칛mta filmer fr친n v친r databas via API");
        const response = await axios.get("/api/movies", { timeout: 8000 });
        console.log(`游꿟 Framg친ngsrikt h칛mtade ${response.data.data.length} filmer fr친n v친r API/databas`);
        return response.data.data;
      } catch (err) {
        // Om Vercel API/databas misslyckas, fallback till MCU API
        console.warn("丘멆잺 Kunde inte h칛mta filmer fr친n v친r databas:", err.message);
        console.log("游꿟 F칬rs칬ker fallback till MCU API...");
        
        const fallbackResponse = await axios.get("https://mcuapi.herokuapp.com/api/v1/movies");
        console.log(`游꿟 Framg친ngsrikt h칛mtade ${fallbackResponse.data.data.length} filmer fr친n MCU API (fallback)`);
        
        return fallbackResponse.data.data;
      }
    }
  } catch (error) {
    console.error("Alla f칬rs칬k att h칛mta filmer misslyckades:", error);
    throw error; // L친t komponenten hantera fel om b친de prim칛r och fallback misslyckas
  }
};